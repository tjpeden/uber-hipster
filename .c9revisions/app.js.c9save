{"ts":1341272426414,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var express = require('express'),\n    mongoose = require('mongoose'),\n    passport = require('passport'),\n    RedisStore = require('connect-redis')(express),\n    Resource = require('express-resource-new');\n\nrequire('./lib/passport');\n\nvar app = module.exports = express.createServer();\nvar pub = __dirname + '/public';\n\n// Configuration\nvar sessionOptions = { secret: 'mega-uber-hipster' };\nif(app.settings.env == 'production')\n  sessionOptions.store = new RedisStore(require('./lib/redis'));\n\napp.configure(function(){\n  app.set('views', __dirname + '/app/views');\n  app.set('view engine', 'jade');\n  app.set('view options', { layout: false });\n  app.set('controllers', __dirname + '/app/controllers');\n  app.use(express.favicon(pub + '/favicon.ico'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.cookieParser());\n  app.use(express.session(sessionOptions));\n  app.use(passport.initialize());\n  app.use(passport.session());\n  app.use(express.static(pub));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler({ dumpExceptions: true, showStack: true }));\n});\n\napp.configure('production', function(){\n  app.use(express.errorHandler());\n});\n\nmongoose.connect(process.env.MONGODB);\n\nrequire('./lib/helpers')(app);\n\n// Routes\n\napp.get('/', function(request, response) {\n  if(!request.isAuthenticated()) {\n    response.render('index');\n  } else {\n    response.redirect('/posts');\n  }\n});\n\napp.get('/about', function(request, response) {\n  response.render('about');\n});\n\napp.get('/auth/google',\n  passport.authenticate('google', { failureRedirect: '/' }),\n  function(request, response) {});\n\napp.get('/auth/google/return',\n  passport.authenticate('google', { failureRedirect: '/' }),\n  function(request, response) {\n    response.redirect('/posts');\n  });\n\napp.get('/logout', function(request, response) {\n  request.logout();\n  response.redirect('/');\n});\n\napp.get('/install', function(request, response) {\n  response.render('install');\n});\n\napp.get('/resources', function(request, response) {\n  response.send(\"<pre>\"+JSON.stringify(app.resources, function(key, value) {\n    if(value == app)\n      return '[Circular]';\n    return value;\n  }, \"  \")+\"</pre>\");\n});\n\n// Setup resources\napp.resource('posts', function() {\n  this.member('put', 'toggle');\n});\n\napp.listen(process.env.PORT || 3000, function(){\n  console.log(\"Express server listening on port %d in %s mode\", app.address().port, app.settings.env);\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":2471}]],"length":2471}
